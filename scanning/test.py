
from cv2 import imread, subtract, imshow, waitKey, destroyAllWindows
import cv2

a = [(525, 135), (662, 224), (603, 177), (619, 165), (1125, 183), (630, 159), (601, 140), (1495, 461), (651, 219), (867, 957), (567, 121), (870, 952), (1429, 468), (556, 105), (628, 160), (1179, 566), (565, 192), (640, 926), (1180, 565), (1179, 565), (635, 912), (1181, 564), (629, 158), (629, 158), (633, 136), (560, 123), (568, 121), (568, 121), (568, 121), (568, 121), (1569, 509), (1519, 466), (984, 71), (535, 952), (1517, 468), (1348, 443), (1348, 443), (865, 947), (605, 175), (631, 908), (607, 169), (629, 141), (415, 167), (608, 171), (637, 155), (605, 128), (1084, 159), (1231, 541), (649, 162), (474, 143), (972, 56), (492, 34), (546, 27), (636, 913), (609, 176), (594, 147), (1138, 197), (1139, 194), (733, 851), (600, 139), (581, 159), (638, 916), (537, 118), (591, 97), (982, 71), (696, 205), (1045, 132), (637, 158), (575, 188), (591, 194), (573, 160), (733, 852), (630, 914), (563, 192), (649, 223), (667, 204), (863, 949), (1523, 469), (605, 129), (310, 947), (1327, 291), (634, 915), (631, 934), (395, 952), (1276, 362), (395, 952), (1243, 418), (314, 944), (1209, 423), (1186, 452), (395, 950), (395, 950), (534, 949), (534, 953), (592, 193), (867, 956), (623, 149), (534, 953), (534, 953), (606, 129), (1385, 199), (1022, 572), (582, 158), (413, 165), (411, 174), (563, 193), (601, 175), (602, 147), (569, 120), (569, 120), (583, 166), (1148, 343), (602, 165), (1116, 791), (659, 217), (597, 907), (732, 851), (565, 116), (549, 99), (627, 603), (537, 137), (537, 137), (593, 144), (568, 120), (583, 168), (1102, 152), (601, 138), (571, 120), (534, 953), (623, 80), (984, 72), (860, 949), (884, 245), (831, 133), (493, 193), (493, 193), (493, 193), (493, 193), (563, 194), (630, 161), (635, 914), (629, 65), (609, 180), (629, 160), (651, 220), (493, 32), (495, 32), (637, 156), (533, 953), (607, 176), (629, 144), (733, 850), (1231, 540), (572, 188), (628, 915), (628, 914), (563, 190), (868, 954), (869, 953), (605, 125), (634, 168), (599, 166), (1336, 422), (1308, 408), (601, 170), (1323, 368), (601, 141), (1516, 416), (1280, 400), (1269, 447), (1234, 452), (1232, 485), (1205, 495), (1212, 514), (549, 186), (1165, 537), (567, 117), (1097, 561), (549, 186), (549, 186), (1008, 551), (988, 585), (981, 551), (940, 554), (908, 544), (895, 512), (914, 464), (894, 765), (923, 440), (907, 380), (952, 376), (948, 362), (919, 359), (889, 332), (617, 164), (841, 337), (814, 355), (778, 360), (755, 331), (623, 160), (601, 169), (979, 604), (738, 53), (719, 470), (720, 495), (628, 161), (754, 474), (801, 473), (834, 460), (857, 495), (836, 542), (854, 570), (789, 553), (824, 550), (628, 161), (744, 575), (1125, 166), (704, 609), (633, 168), (654, 570), (692, 523), (658, 506), (700, 486), (677, 451), (634, 176), (700, 413), (734, 367), (714, 341), (602, 174), (672, 370), (665, 418), (573, 158), (643, 442), (605, 129), (606, 494), (603, 535), (585, 520), (605, 171), (540, 560), (491, 573), (1045, 134), (910, 799), (538, 493), (510, 454), (546, 438), (638, 911), (581, 158), (523, 364), (517, 364), (509, 376), (480, 396), (611, 50), (980, 72), (624, 149), (1126, 162), (406, 417), (406, 440), (433, 493), (450, 510), (1194, 158), (605, 128), (581, 158), (333, 639), (1179, 564), (1016, 48), (1199, 424), (267, 562), (283, 507), (264, 509), (286, 462), (281, 447), (268, 395), (274, 176), (242, 335), (272, 313), (259, 280), (1130, 127), (630, 161), (359, 301), (407, 295), (636, 171), (591, 130), (484, 329), (531, 316), (554, 315), (564, 289), (679, 863), (638, 305), (664, 318), (690, 272), (720, 281), (740, 318), (796, 303), (808, 329), (628, 913), (862, 273), (880, 312), (588, 169), (636, 913), (743, 849), (1000, 307), (974, 331), (637, 912), (992, 408), (952, 433), (622, 168), (976, 469), (948, 524), (977, 529), (946, 573), (979, 604), (532, 39), (924, 714), (886, 746), (859, 752), (860, 719), (806, 730), (793, 678), (736, 687), (919, 358), (709, 653), (696, 653), (662, 677), (646, 646), (616, 665), (584, 684), (895, 512), (530, 657), (512, 684), (463, 707), (418, 722), (879, 85), (878, 85), (315, 715), (519, 45), (631, 156), (236, 634), (192, 626), (178, 625), (1204, 495), (136, 569), (160, 536), (624, 159), (588, 169), (608, 180), (630, 159), (127, 385), (564, 191), (1307, 407), (605, 129)]


sumx = 0
minx = 2000
maxx = 0

minz = 0
maxz = 2000
for i in a:
    sumx += i[0]
    minx = min(minx, i[0])
    maxx = max(maxx, i[0])

    minz = max(minz, i[1])
    maxz = min(maxz, i[1])
mid = sumx / len(a)
print(minx, maxx, mid, minz, maxz)
for i in a:
    print(f"{((i[0] - mid) - minx) / (mid)}, 0, {(minz - i[1]) / (mid * 2)}")
exit()



imagedirs = [
    "results/results2-0-0.png",
    "results/results2-1-0.png",
    "results/results2-2-0.png",
    "results/results2-3-0.png",
    "results/results2-4-0.png",
    "results/results2-5-0.png",
    "results/results2-6-0.png",
    "results/results2-7-0.png",
    "results/results2-8-0.png",
]

cleanplate = "results/results2-9-0.png"
cleanimage = imread(cleanplate)

all = "results/results2-11-0.png"
circled = imread(all)
count = 0
allimage = subtract(imread(all), cleanimage)

images = map(lambda x: imread(x), imagedirs)

subtracted_images = list(map(lambda x: subtract(x, cleanimage), list(images)))

for pixelid in range(500):
    startimage = allimage
    for i, image in enumerate(subtracted_images):
        if (pixelid & 0x1 << i) == 0:
            startimage = subtract(startimage, image)
        else:
            startimage = subtract(startimage, subtract(allimage, image))

    gray = cv2.cvtColor(startimage, cv2.COLOR_BGR2GRAY)
    minVal, maxVal, minLoc, maxLoc = cv2.minMaxLoc(gray)
    if maxVal > 0:
        print(maxVal)
        cv2.circle(circled, maxLoc, 6, (255, 0, 0), 3)
        count += 1

print(count)
imshow("test", circled)
waitKey(0)
destroyAllWindows()


